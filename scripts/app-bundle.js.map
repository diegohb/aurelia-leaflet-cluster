{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/model/GeoCoordinate.ts","src/model/GeographicExtent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQA;QAME;YAJA,YAAO,GAAG,cAAc,CAAC;YAEzB,cAAS,GAAqB,IAAI,CAAC;QAGnC,CAAC;QAEY,sBAAQ,GAArB;;;;;;;4BACE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;4BAEhC,KAAK,GAAgB,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;4BAE5D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gCACX,MAAM,KAAC,OAAO,CAAC,MAAM,CAAC,iDAAiD,CAAC,EAAC;4BAC3E,CAAC;4BAEG,UAAU,GAAe;gCAC3B,OAAO,EAAE,CAAC;gCACV,OAAO,EAAE,EAAE;gCACX,WAAW,EAAE,KAAK;6BACnB,CAAC;4BAEE,MAAM,GAAG,IAAI,aAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;4BAExC,KAAA,IAAI,CAAA;4BAAQ,WAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC,EAAA;;4BAAhE,GAAK,IAAI,GAAG,SAAoD,CAAC;4BACjE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE;;;;;4CACtB,KAAA,IAAI,CAAA;4CAAa,WAAM,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAA;;4CAAxD,GAAK,SAAS,GAAG,SAAuC,CAAC;;;;iCAC1D,CAAC,CAAC;4BAEH,KAAA,IAAI,CAAA;4BAAa,WAAM,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAA;;4BAAxD,GAAK,SAAS,GAAG,SAAuC,CAAC;4BAEzD,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;4BAElB,WAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;;;;SACnC;QAEa,2BAAa,GAA3B,UAA4B,WAAgB,EAAE,QAAgB;;gBAsB5D,yBAAyB,IAAS;oBAChC,IAAI,WAAW,GAAG,iBAAO,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;oBACxD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;gBAC/B,CAAC;;;oBAvBD,eAAe,CAAC,WAAW,CAAC,CAAC;oBAEzB,iBAAiB,GAA2B,IAAI,gBAAM,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;oBAC7E,WAAW,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;oBAEvC,SAAS,GACX,mBAAS,CACP,+MAA+M,EAC/M;wBACE,OAAO,EAAE,QAAQ;wBACjB,WAAW,EACX,2DAA2D;4BAC3D,yEAAyE;4BACzE,sGAAsG;wBACtG,EAAE,EAAE,oBAAoB;qBACzB,CAAC,CAAC;oBAEP,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;oBAC7B,WAAO,WAAW,EAAC;;;SAMpB;QAEoB,sBAAkB,GAAvC,UAAwC,IAAS;;;;oBAC/C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;wBACR,MAAM,mCAAmC,CAAA;oBAEvC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;oBAE7B,QAAQ,GAAkB,IAAI,6BAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,SAAS,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;oBACxG,gBAAgB,GAAkB,IAAI,6BAAa,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,SAAS,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;oBAEhH,MAAM,GAAqB,IAAI,mCAAgB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;oBAChF,WAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;;;SAChC;QACH,UAAC;IAAD,CA9EA,AA8EC,IAAA;IA9EY,kBAAG;;;;;;;;ICRhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;ICAF,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC;aACpB,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAfD,8BAeC;;;;;;;;IChBD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC;;;;;;;;ICHD;QAKI,uBAAY,SAAiB,EAAE,UAAkB,EAAE,SAAkB;YACjE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,EAAE,CAAC,CAAC,SAAS,CAAC;gBACV,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QACnC,CAAC;QAED,sBAAI,mCAAQ;iBAAZ,cAAyB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;WAAA;QAEjD,sBAAI,oCAAS;iBAAb,cAA0B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;;WAAA;QAEnD,sBAAI,mCAAQ;iBAAZ,cAAyB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;WAAA;QAE1C,gCAAQ,GAAf;YACI,MAAM,CAAC,MAAI,IAAI,CAAC,QAAQ,SAAI,IAAI,CAAC,SAAS,MAAG,CAAC;QAClD,CAAC;QACL,oBAAC;IAAD,CArBA,AAqBC,IAAA;IArBY,sCAAa;;;;;;;;ICC1B;QAII,0BAAY,QAAuB,EAAE,YAA2B;YAG5D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACrC,CAAC;QAED,sBAAI,qCAAO;iBAAX;gBACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAED,sBAAI,yCAAW;iBAAf;gBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;;;WAAA;QAEG,6CAAkB,GAAzB;YACO,MAAM,CAAC;gBACH,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBAChC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aAC3C,CAAC;QACN,CAAC;QAEM,iCAAM,GAAb;YACI,MAAM,CAAC,cAAY,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,2BAAsB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAG,CAAC;QACnG,CAAC;QACL,uBAAC;IAAD,CA7BA,AA6BC,IAAA;IA7BY,4CAAgB","file":"app-bundle.js","sourcesContent":["import * as $ from \"jquery\";\nimport { Map, MapOptions, LatLng, tileLayer, LatLngExpression, LatLngLiteral, Icon, control, Layer } from \"leaflet\";\nimport { GeographicExtent } from './model/GeographicExtent';\nimport { GeoCoordinate } from \"./model/GeoCoordinate\";\nimport { bindable, bindingMode } from 'aurelia-framework';\nimport \"bootstrap-material-design\";\n\n\nexport class App {\n  private _map: Map;\n  message = 'Hello World!';\n\n  mapExtent: GeographicExtent = null;\n\n  constructor() {\n  }\n\n  public async attached(): Promise<any> {\n    $(\"p#jquery\").text(\"jquery loaded!\")\n\n    let elMap: HTMLElement = document.getElementById(\"leafmap\");\n\n    if (!elMap) {\n      return Promise.reject(\"Map container element expected by ID 'leafmap'.\");\n    }\n\n    let mapOptions: MapOptions = {\n      minZoom: 9,\n      maxZoom: 18,\n      zoomControl: false\n    };\n\n    let newMap = new Map(elMap, mapOptions);\n\n    this._map = await this.initializeMap(newMap, mapOptions.maxZoom);\n    this._map.on(\"moveend\", async () => {\n      this.mapExtent = await App.getMapExtentBounds(this._map);\n    });\n\n    this.mapExtent = await App.getMapExtentBounds(this._map);\n\n    $.material.init();\n\n    return Promise.resolve(this._map);\n  }\n\n  private async initializeMap(pLeafletMap: Map, pMaxZoom: number): Promise<any> {\n\n    addZoomControls(pLeafletMap);\n\n    let centerCoordinates: LatLng | LatLngLiteral = new LatLng(38.883, -76.9947);\n    pLeafletMap.setView(centerCoordinates, 16);\n\n    let baseLayer =\n      tileLayer(\n        \"https://api.mapbox.com/styles/v1/compsagnathus/cj4rhzsvw2xb82sn12xvq12fq/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY29tcHNhZ25hdGh1cyIsImEiOiJjajRyZ3ZpbzUwazJhMzRqcmxhZmpsd281In0.gDi4uI4dBfOxHJWedZnkXQ\",\n        {\n          maxZoom: pMaxZoom,\n          attribution:\n          \"© <a href='https://www.mapbox.com/about/maps/'>Mapbox</a>\" +\n          \"© <a href='http://www.openstreetmap.org/copyright'> OpenStreetMap </a> \" +\n          \"<strong> <a href='https://www.mapbox.com/feedback/' target='_blank'> Improve this map </a></strong >\",\n          id: \"wmflabs.streets.bw\"\n        });\n\n    baseLayer.addTo(pLeafletMap);\n    return pLeafletMap;\n\n    function addZoomControls(pMap: Map): void {\n      let zoomControl = control.zoom({ position: \"topleft\" });\n      pMap.addControl(zoomControl);\n    }\n  }\n\n  private static async getMapExtentBounds(pMap: Map): Promise<GeographicExtent> {\n    if (!pMap)\n      throw \"getMapExtentBounds: pMap is null!\"\n\n    let mapBounds = pMap.getBounds();\n\n    let boundTop: GeoCoordinate = new GeoCoordinate(mapBounds.getNorthWest().lng, mapBounds.getNorthWest().lat);\n    let boundBottomRight: GeoCoordinate = new GeoCoordinate(mapBounds.getSouthEast().lng, mapBounds.getSouthEast().lat);\n\n    let bounds: GeographicExtent = new GeographicExtent(boundTop, boundBottomRight);\n    return Promise.resolve(bounds);\n  }\n}\n\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature(\"resources\")\n    .plugin(\"aurelia-bootstrap\");\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","\r\nexport class GeoCoordinate {\r\n    private readonly _latitude: number;\r\n    private readonly _longitude: number;\r\n    private readonly _altitude: number;\r\n\r\n    constructor(pLatitude: number, pLongitude: number, pAltitude?: number) {\r\n        this._latitude = pLatitude;\r\n        this._longitude = pLongitude;\r\n        if (pAltitude)\r\n            this._altitude = pAltitude;\r\n    }\r\n\r\n    get Latitude(): number { return this._latitude; }\r\n\r\n    get Longitude(): number { return this._longitude; }\r\n\r\n    get Altitude(): number { return this._altitude; }\r\n\r\n    public toString(): string {\r\n        return `(${this.Latitude},${this.Longitude})`;\r\n    }\r\n}","import { GeoCoordinate } from \"./GeoCoordinate\";\r\n\r\nexport class GeographicExtent {\r\n    private readonly _topLeft: GeoCoordinate;\r\n    private readonly _bottomRight: GeoCoordinate;\r\n\r\n    constructor(pTopLeft: GeoCoordinate, pBottomRight: GeoCoordinate) {\r\n        //TODO: validate            \r\n\r\n        this._topLeft = pTopLeft;\r\n        this._bottomRight = pBottomRight;\r\n    }\r\n\r\n    get TopLeft(): GeoCoordinate {\r\n        return this._topLeft;\r\n    }\r\n\r\n    get BottomRight(): GeoCoordinate {\r\n        return this._bottomRight;\r\n    }\r\n\r\n public ToPivotalApiObject(): any {\r\n        return {\r\n            TopLeft: this.TopLeft.toString(),\r\n            BottomRight: this.BottomRight.toString()\r\n        };\r\n    }\r\n\r\n    public toHTML(){\r\n        return `TopLeft: ${this.TopLeft.toString()}<br />BottomRight: ${this.BottomRight.toString()}]`;\r\n    }\r\n}"],"sourceRoot":".."}